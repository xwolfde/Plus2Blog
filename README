Plus2Blog

Version: 1.1
Author : Wolfgang Wiese ("xwolf"), http://www.xwolf.de
GitHub : http://github.com/xwolfde/Plus2Blog

Description:
============

This script reads in the activity stream of a Google+ user and sends it to
a given blog using XML-RPC.


Usage:
======

./plus2blog.pl [--userid=i --apikey=s --xmlrpc=s --blog-user=s --blog-pwd=s --configfile=s --indexfile=s --debug]
	--userid=i:     A google plus userid 
	--apikey=s:     An api-key for this script. Get yourself an api-key at http://developers.google.com/+/api/oauth#apikey 
	--xmlrpc=s:     URL to the XML-RPC API of the blog in which all messages are streamed to.
	--blog-user=s:  Username for the blog
	--blog-pwd=s:   Password for the blog
	--configfile=s: Configuration file for all configuration variables; Overrides all parameters and defaults 
	                Readable tabseparated file
	--indexfile=s:  Index of previous blog entries
	--debug:        Sets debug mode on
	--checkonly:	Do not push new entries to blog, just read the g+ stream

In common use you will call this script using crontab. E.g. with an crontab-entry like this:
   10 8-23 * * * /myhome/plus2blog/plus2blog.pl --configfile=/myhome/plus2blog/myconfig.txt >/dev/null 2>&1

Its also possible to push data from more as one g+ stream to a single blog or 
to push data from one g+ stream to several blogs.
In this case you should use several indexfiles for each stream and blog:
The indexfiles will register each article that was already send to a blog before
and will not send it again. Therfor you will habe to use two or more
indexfiles for each target or source stream.

Example: One g+ userid 12345678 as source for an article stream and two blogs as targets:

  ./plus2blog.pl --userid=12345678 --xmlrpc=blog1.example.org/xmlrpc.php --blog-user=blog1user --blog-pwd=something --indexfile=blog1.store
  ./plus2blog.pl --userid=12345678 --xmlrpc=blog2.example.org/xmlrpc.php --blog-user=blog2user --blog-pwd=something --indexfile=blog2.store

if there is a file named plus2blog.txt as a configfile, its variables will be used too.
Parameters about command line will override all paraneters within the script an within configfiles.



Configuration:
==============

Please change the following settings at the top of plus2blog.pl or set values
using parameters or by setting them into a config file (see sample-config.txt).

        "api_key"               => 'your-api-key',
                # API-Key for this script;
                # Get yourself an api-key at http://developers.google.com/+/api/oauth#apikey
        "userid"                => 'your-user-id',
                # Google userid, from which you want to get the stream
        "url_blogxmlrpc"        => 'your-blog-url/xmlrpc.php',
                # URL to the XML RPC Api of the blog
        "blog_username"         => 'your-blog-username',
        "blog_password"         => 'your-blog-password',
        "blog_id"               => 1,
                # Blog-Id, mostly this is 1 if you dont use a multiuser-blogging-system
        "blog_defaultcategory"  => "MyGooglePlusStream",
                # Default category of entries 
        "url_googleapi"         => 'https://www.googleapis.com/',
        "uri_activitylist"      => '/plus/v1/people/',
        "fieldfilter"           => "&fields=items(object(actor%2Cattachments%2Ccontent%2Cid%2CobjectType%2CoriginalContent%2Creplie
s%2Curl)%2Cpublished%2Ctitle%2Curl%2Cverb)",
                # For blogposts we only need a small set of data-fields
        "onlyposts"             => 1,
                 # Set to 0, if also reshares
        "show_attachments"      => 1,
                # Add Attachment as part of the article
        "clip_title"            => 1,
                # clips the title-string from the text
        "cssclass_attachments"  => "attachment clearfix",
                # CSS class for all attachments
        "article_minlength"     => 300,
                # Minimum number of chars a g+ article should have if it
                # gets posted as blogarticle
        "cssclass_articleborder" => "",
                # if a div with a class should sorround the text, enter a classname here
        "add_paragraph"         => 1,
                # if a paragraph-tag shpuld be placed around the textcontent, set this to 1
        "show_attachment_linkcontent"   => 1,
                # if attachments will also display the generated infotext about the target, set this to 1
        "cssclass_linkcontent"  => "linkinfo",  
                # if generated infotext should be encalapsulated with a css-class, define its name here
        "show_replies"          => 1,
                # if there are already replys, a link will be added telling about the replys
                # and where to comment
        "replies_notice"        => "<p class=\"replies\">There are already #replies.totalItems# replies at G+. <a href=\"#url#\">Pl
ease follow the discussion there</a>.</p>",
        "show_source"           => 1,
                # If a notice of the source will be displayed; This wont be displayed, if the current item
                # contains replies, which will also target the source.
        "source_notice"         => "<p class=\"notice\">This article was <a href=\"#url#\">published at G+ first</a>.</p>",     
        "pubindex_file"         => 'pubindex.store',
                # Storefile with all articles that was already send to the blog before
        "configfile"            => 'plus2blog.txt',
                # configfile to store own config




Required Perl-Modules:
======================

 LWP::UserAgent
 JSON
 XMLRPC::Lite
 Getopt::Long


License: 
========

Creative Commons Attribution 3.0 Unported License
http://creativecommons.org/licenses/by/3.0/

Copyright (c) 2011 Wolfgang Wiese

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation the
rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
sell copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


